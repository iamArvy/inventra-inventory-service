// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Warehouse {
  id                 String               @id @default(uuid())
  account_id         String
  name               String               @unique
  location           String
  status             WarehouseStatus      @default(active)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  deletedAt          DateTime?
  WarehouseInventory WarehouseInventory[]
  StockTransaction   StockTransaction[]

  @@map("warehouses")
}

model Product {
  id                 String               @id @default(uuid())
  account_id         String
  name               String
  description        String
  sku                String               @unique
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  status             ProductStatus        @default(active)
  deletedAt          DateTime?
  WarehouseInventory WarehouseInventory[]
  StockTransaction   StockTransaction[]

  @@map("products")
}

model WarehouseInventory {
  id          String    @id @default(uuid())
  account_id  String
  warehouseId String
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  productId   String
  product     Product   @relation(fields: [productId], references: [id])
  stock       Int
  minStock    Int
  capacity    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([warehouseId, productId])
  @@map("warehouse_inventories")
}

model StockTransaction {
  id          String          @id @default(uuid())
  productId   String
  product     Product         @relation(fields: [productId], references: [id])
  warehouseId String
  warehouse   Warehouse       @relation(fields: [warehouseId], references: [id])
  quantity    Int
  type        TransactionType
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@map("stock_transactions")
}

enum ProductStatus {
  active
  inactive
}

enum TransactionType {
  inbound
  outbound
  adjustment
}

enum WarehouseStatus {
  active
  inactive
}
